---
- name: Install recap from repo
  hosts: all
  become: "yes"
  vars:
    repo: https://github.com/rackerlabs/recap.git
    ref: master
    binpath: "/sbin"
    destdir: ""
    prefix: "/usr"
    tmp_install_dir: /tmp/recap
    install_deps:
      - git
      - make
    systemd_unit_dir: "{{ destdir }}/usr/lib/systemd/system"
    enable_plugins: false
    plugin_list:
      - all
  tasks:
  - name: Set dependencies and timers
    set_fact:
      dependencies:
        - bash
        - coreutils
        - gawk
        - grep
        - iotop
        - "iproute{{'2' if ansible_os_family is match('Debian|Archlinux') else ''}}"
        - elinks
        - "{{ 'procps-ng' if ansible_os_family is match('Archlinux') else 'procps' }}"
        - psmisc
        - sysstat
      timers:
        - recap.timer
        - recaplog.timer
        - recap-onboot.timer

  - name: Install package and build dependencies
    package:
      name: "{{ dependencies + install_deps }}"
      state: present
      update_cache: "yes"
    when: uninstall is undefined

  - name: Clone the repo
    git:
      repo: "{{ repo }}"
      version: "{{ ref }}"
      dest: "{{ tmp_install_dir }}"

  - name: Installation
    block:
    - name: Install recap
      make:
        chdir: "{{ tmp_install_dir }}"
        target: install
        params:
          BINPATH: "{{ binpath }}"
          DESTDIR: "{{ destdir }}"
          PREFIX: "{{ prefix }}"

    - name: Enabling plugins
      block:
      - name: Finding all plugins available
        block:
        - name: Find all plugins
          find:
            paths: "{{ prefix }}/lib/recap/plugins-available"
          register: plugins_found

        - name: Create plugin list with all plugins found
          set_fact:
            plugin_list: "{{ plugin_list + [ item.path | basename ] }}"
          with_items: "{{ plugins_found.files }}"
          when: plugins_found.matched

        - name: Remove "all" from list
          set_fact:
            plugin_list: "{{ plugin_list | difference(['all']) }}"

        when: "'all' in plugin_list"

      - name: enable plugins in global config
        lineinfile:
          path: /etc/recap.conf
          insertafter: '#USEPLUGINS="no"'
          line: 'USEPLUGINS="yes"'
          state: present

      - name: enable list of plugins
        file:
          dest: "{{ prefix }}/lib/recap/plugins-enabled/{{ item }}"
          src: "{{ prefix }}/lib/recap/plugins-available/{{ item }}"
          state: link
        with_items: "{{ plugin_list }}"

      when: enable_plugins|bool

    - name: Enable systemd timers
      systemd:
        name: "{{ item }}"
        enabled: "yes"
        state: started
        daemon_reload: "yes"
      with_items: "{{ timers }}"
      when: ansible_service_mgr == 'systemd'

    - name: Get recap version
      shell: recap --version
      register: recap_version

    - name: Print recap version
      debug:
        var: recap_version.stdout_lines[0]

    - name: Run manually recap
      shell: recap

    - name: Wait for recap completion
      wait_for:
        path: /var/lock/recap.lock
        state: absent
    when: uninstall is undefined

  - name: Uninstall
    block:
    - name: Look for the timer units
      stat:
        path: "{{ systemd_unit_dir }}/{{ item }}"
      register: timer_units
      with_items: "{{ timers }}"
      when: ansible_service_mgr == 'systemd'

    - name: Disable systemd timers
      systemd:
        name: "{{ item.item }}"
        state: stopped
        enabled: "no"
      with_items: "{{ timer_units.results }}"
      when: >
        ansible_service_mgr == 'systemd' and item.stat.exists

    - name: Uninstall recap
      make:
        chdir: "{{ tmp_install_dir }}"
        target: uninstall
        params:
          DESTDIR: "{{ destdir }}"
          PREFIX: "{{ prefix }}"
      notify: Reload systemd
    when: uninstall is defined

  handlers:
  - name: Reload systemd
    systemd:
      daemon_reload: "yes"

...
